package ru.SimbirSoft.listeners;

import org.junit.jupiter.api.extension.ExtensionContext;
import org.junit.jupiter.api.extension.TestWatcher;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;

import java.util.Optional;

/**
 * –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ª—É—à–∞—Ç–µ–ª—å —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Allure
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –∏ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç –∏—Ö –∫ –æ—Ç—á–µ—Ç–∞–º
 */
public class AllureTestListener implements TestWatcher {

    // ThreadLocal –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è WebDriver –≤ –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏—è—Ö
    private static final ThreadLocal<WebDriver> driverThreadLocal = new ThreadLocal<>();

    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç WebDriver –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ—Ç–æ–∫–∞
     */
    public static void setDriver(WebDriver driver) {
        driverThreadLocal.set(driver);
        System.out.println("üöó WebDriver —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è –ø–æ—Ç–æ–∫–∞: " + Thread.currentThread().getName());
    }

    /**
     * –û—á–∏—â–∞–µ—Ç WebDriver –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ—Ç–æ–∫–∞
     */
    public static void clearDriver() {
        driverThreadLocal.remove();
        System.out.println("üßπ WebDriver –æ—á–∏—â–µ–Ω –¥–ª—è –ø–æ—Ç–æ–∫–∞: " + Thread.currentThread().getName());
    }

    @Override
    public void testFailed(ExtensionContext context, Throwable cause) {
        String testName = context.getDisplayName();
        System.err.println("‚ùå –¢–µ—Å—Ç —É–ø–∞–ª: " + testName);

        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ
        AllureUtils.addTextAttachment("–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞",
                "–¢–µ—Å—Ç: " + testName + "\n" +
                        "–û—à–∏–±–∫–∞: " + cause.getMessage() + "\n" +
                        "–¢–∏–ø –æ—à–∏–±–∫–∏: " + cause.getClass().getSimpleName() + "\n" +
                        "–í—Ä–µ–º—è: " + java.time.LocalDateTime.now()
        );

        // –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –∏ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        captureScreenshot("–°–ö–†–ò–ù–®–û–¢ –ü–†–ò –û–®–ò–ë–ö–ï: " + testName);
        attachPageSource("–ò–°–•–û–î–ù–´–ô –ö–û–î –°–¢–†–ê–ù–ò–¶–´ –ü–†–ò –û–®–ò–ë–ö–ï");

        // –õ–æ–≥–∏—Ä—É–µ–º —Å—Ç–µ–∫—Ç—Ä–µ–π—Å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        System.err.println("Stack trace:");
        cause.printStackTrace();
    }

    @Override
    public void testSuccessful(ExtensionContext context) {
        String testName = context.getDisplayName();
        System.out.println("‚úÖ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ: " + testName);

        // –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        captureScreenshot("–°–ö–†–ò–ù–®–û–¢ –£–°–ü–ï–®–ù–û–ì–û –í–´–ü–û–õ–ù–ï–ù–ò–Ø: " + testName);

        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—Å–ø–µ—à–Ω–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏
        AllureUtils.addTextAttachment("–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞",
                "–¢–µ—Å—Ç: " + testName + "\n" +
                        "–°—Ç–∞—Ç—É—Å: –£–°–ü–ï–®–ù–û\n" +
                        "–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: " + java.time.LocalDateTime.now()
        );
    }

    @Override
    public void testAborted(ExtensionContext context, Throwable cause) {
        String testName = context.getDisplayName();
        System.out.println("‚è∏Ô∏è –¢–µ—Å—Ç –ø—Ä–µ—Ä–≤–∞–Ω: " + testName);

        AllureUtils.addTextAttachment("–¢–µ—Å—Ç –ø—Ä–µ—Ä–≤–∞–Ω",
                "–¢–µ—Å—Ç: " + testName + "\n" +
                        "–ü—Ä–∏—á–∏–Ω–∞: " + cause.getMessage() + "\n" +
                        "–í—Ä–µ–º—è: " + java.time.LocalDateTime.now()
        );

        captureScreenshot("–°–ö–†–ò–ù–®–û–¢ –ü–†–ò –ü–†–ï–†–´–í–ê–ù–ò–ò: " + testName);
    }

    @Override
    public void testDisabled(ExtensionContext context, Optional<String> reason) {
        String testName = context.getDisplayName();
        String reasonText = reason.orElse("–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞");
        System.out.println("üö´ –¢–µ—Å—Ç –æ—Ç–∫–ª—é—á–µ–Ω: " + testName + " - " + reasonText);

        AllureUtils.addTextAttachment("–¢–µ—Å—Ç –æ—Ç–∫–ª—é—á–µ–Ω",
                "–¢–µ—Å—Ç: " + testName + "\n" +
                        "–ü—Ä–∏—á–∏–Ω–∞: " + reasonText + "\n" +
                        "–í—Ä–µ–º—è: " + java.time.LocalDateTime.now()
        );
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç –∏ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç –µ–≥–æ –∫ Allure –æ—Ç—á–µ—Ç—É
     */
    private void captureScreenshot(String screenshotName) {
        try {
            WebDriver driver = getWebDriver();
            if (driver != null && driver instanceof TakesScreenshot) {
                AllureUtils.addScreenshot(driver, screenshotName);
            } else {
                System.err.println("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç: WebDriver –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω");
            }
        } catch (Exception e) {
            System.err.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: " + e.getMessage());
        }
    }

    /**
     * –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫ Allure –æ—Ç—á–µ—Ç—É
     */
    private void attachPageSource(String attachmentName) {
        try {
            WebDriver driver = getWebDriver();
            if (driver != null) {
                AllureUtils.addPageSource(driver, attachmentName);
            }
        } catch (Exception e) {
            System.err.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–∏ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞: " + e.getMessage());
        }
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç WebDriver –∏–∑ ThreadLocal
     */
    private WebDriver getWebDriver() {
        return driverThreadLocal.get();
    }
}