package ru.SimbirSoft.listeners;

import io.qameta.allure.Allure;
import org.openqa.selenium.NoAlertPresentException;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;

import java.io.ByteArrayInputStream;

/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Allure –æ—Ç—á–µ—Ç–∞–º–∏
 * –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤, —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –≤–ª–æ–∂–µ–Ω–∏–π –∏ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü
 */
public class AllureUtils {

    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç –∫ Allure –æ—Ç—á–µ—Ç—É
     * @param driver —ç–∫–∑–µ–º–ø–ª—è—Ä WebDriver
     * @param name –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –≤ –æ—Ç—á–µ—Ç–µ
     */
    public static void addScreenshot(WebDriver driver, String name) {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π alert
            try {
                driver.switchTo().alert();
                // –ï—Å–ª–∏ –µ—Å—Ç—å alert, –≤—Ä–µ–º–µ–Ω–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –æ–±—Ä–∞—Ç–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
                driver.switchTo().defaultContent();
            } catch (NoAlertPresentException e) {
                // Alert –Ω–µ—Ç, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∫–∞–∫ –æ–±—ã—á–Ω–æ
            }

            byte[] screenshot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.BYTES);
            Allure.addAttachment(name, "image/png", new ByteArrayInputStream(screenshot), "png");
            System.out.println("üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω: " + name);
        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: " + e.getMessage());
        }
    }

    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫ Allure –æ—Ç—á–µ—Ç—É
     * @param driver —ç–∫–∑–µ–º–ø–ª—è—Ä WebDriver
     * @param name –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–ª–æ–∂–µ–Ω–∏—è –≤ –æ—Ç—á–µ—Ç–µ
     */
    public static void addPageSource(WebDriver driver, String name) {
        try {
            String pageSource = driver.getPageSource();
            Allure.addAttachment(name, "text/html", pageSource, ".html");
            System.out.println("üìÑ –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–æ–±–∞–≤–ª–µ–Ω: " + name);
        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞: " + e.getMessage());
        }
    }

    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –≤–ª–æ–∂–µ–Ω–∏–µ –∫ Allure –æ—Ç—á–µ—Ç—É
     * @param name –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–ª–æ–∂–µ–Ω–∏—è
     * @param content —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—Å—Ç–∞
     */
    public static void addTextAttachment(String name, String content) {
        try {
            Allure.addAttachment(name, "text/plain", content, ".txt");
            System.out.println("üìù –¢–µ–∫—Å—Ç–æ–≤–æ–µ –≤–ª–æ–∂–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ: " + name);
        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –≤–ª–æ–∂–µ–Ω–∏—è: " + e.getMessage());
        }
    }

    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç —à–∞–≥ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –≤ Allure –æ—Ç—á–µ—Ç
     * @param stepName –Ω–∞–∑–≤–∞–Ω–∏–µ —à–∞–≥–∞
     */
    public static void addStep(String stepName) {
        try {
            Allure.step(stepName);
            System.out.println("üîπ –®–∞–≥ –≤—ã–ø–æ–ª–Ω–µ–Ω: " + stepName);
        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —à–∞–≥–∞: " + e.getMessage());
        }
    }

    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä —Ç–µ—Å—Ç–∞ –≤ Allure –æ—Ç—á–µ—Ç
     * @param name –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
     * @param value –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
     */
    public static void addParameter(String name, String value) {
        try {
            Allure.parameter(name, value);
            System.out.println("üìã –ü–∞—Ä–∞–º–µ—Ç—Ä –¥–æ–±–∞–≤–ª–µ–Ω: " + name + " = " + value);
        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞: " + e.getMessage());
        }
    }
}